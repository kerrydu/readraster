---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  C:\Users\17286\Documents\example.log
  log type:  text
 opened on:  21 May 2025, 17:02:47

.
. *7.1 Set up the Java dependence
.
.//tiff
. 
. //manually download the GeoTools package from Sourceforge https://sourceforge.net/projects/geotools/files/GeoTools\%2032\%20Releases/32.0/ and specify the path to "ge
> otools-32.0/lib" 
. 
. geotools_init "C:/Users/17286/Documents/geotools-32.0/lib/"
(file C:\Users\17286\ado\plus/p/path_geotoolsjar.ado not found)
.
.//nc
.
. netcdf_init, download plus(jar)
Downloading netcdfAll-5.6.0.jar into C:\Users\17286\Documents...
Please wait...
Copying netcdfAll-5.6.0.jar to \Users\17286\ado\plus//jar ...

. 
. *7.2 Display the Metadata
. 
. //Display the Metadata of the GeoTIFF File
. gtiffdisp DMSP-like2020.tif

=== Band Information ===
Number of bands: 1
Band 1 : GRAY_INDEX           | NoData: Not defined

=== Spatial Characteristics ===
X range: [-2643772.8565 ~ 2212227.1435]
Y range: [1871896.5263 ~ 5926896.5263]
Resolution: X=1000.0000 units/pixel, Y=1000.0000 units/pixel

=== Coordinate System ===
CRS Name: PCS Name = WGS_1984_Albers
CRS WKT: PROJCS["PCS Name = WGS_1984_Albers", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Albers_Conic_Equal_Area"], 
  PARAMETER["central_meridian", 105.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["standard_parallel_1", 25.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  PARAMETER["standard_parallel_2", 47.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH]]

=== Units ===
X unit: m
Y unit: m

=== Filtered Metadata ===
image_height                : 4055
image_min_x_coord           : 0
image_width                 : 4856
image_min_y_coord           : 0

. 
. //Display the Metadata of the NetCDF File
. ////The developed commands can directly read nc files on the network. However, due to reasons such as network SSL authentication, the reading may fail. If this happens, you can copy the nc file
>  to the local device and then perform the following corresponding operations.
> local url = "https://nex-gddp-cmip6.s3-us-west-2.amazonaws.com/" + ///
> "NEX-GDDP-CMIP6/BCC-CSM2-MR/ssp245/r1i1p1f1/tas/" + ///
> "tas_day_BCC-CSM2-MR_ssp245_r1i1p1f1_gn_2050.nc"

. ncdisp using `"`url'"'

=== File Structure ===

[Global Attributes]
_NCProperties            : version=1|netcdflibversion=4.4.1.1|hdf5libversi...
activity                 : NEX-GDDP-CMIP6
contact                  : Dr. Rama Nemani: rama.nemani@nasa.gov, Dr. Brid...
Conventions              : CF-1.7
creation_date            : 2021-10-04T14:25:12.081609+00:00
frequency                : day
institution              : NASA Earth Exchange, NASA Ames Research Center,...
variant_label            : r1i1p1f1
product                  : output
realm                    : atmos
source                   : BCSD
scenario                 : ssp245
references               : BCSD method: Thrasher et al., 2012, Hydrol. Ear...
version                  : 1.0
tracking_id              : 6ab2a874-d3fe-484a-a7e8-82df448e364f
title                    : BCC-CSM2-MR, r1i1p1f1, ssp245, global downscale...
resolution_id            : 0.25 degree
history                  : 2021-10-04T14:25:12.081609+00:00: install globa...
disclaimer               : This data is considered provisional and subject...
external_variables       : areacella
cmip6_source_id          : BCC-CSM2-MR
cmip6_institution_id     : BCC
cmip6_license            : CC-BY-SA 4.0
_CoordSysBuilder         : ucar.nc2.dataset.conv.CF1Convention

[Dimensions]
Name                 Length   Attribute      
time                 365      Coordinate     
lat                  600      Coordinate     
lon                  1440     Coordinate     

[Variables]
Name                      Dimensions                     Type           
tas                       time lat lon                   float          
time                      time                           double         
lat                       lat                            double         
lon                       lon                            double         

[Groups]

. 
. //Display variable metadata with ncdisp
. ///tas variable
> local url = "https://nex-gddp-cmip6.s3-us-west-2.amazonaws.com/" + ///
> "NEX-GDDP-CMIP6/BCC-CSM2-MR/ssp245/r1i1p1f1/tas/" + ///
> "tas_day_BCC-CSM2-MR_ssp245_r1i1p1f1_gn_2050.nc"

. ncdisp tas using `"`url'"'

=== Variable Structure ===
Name: tas                       Type: float          

=== Dimensions ===
Dimension       Length   Coordinate     
time            365      [Yes]          
lat             600      [Yes]          
lon             1440     [Yes]          

=== Scale/Offset Parameters ===
missing value  : 100000002004087730000.000000 (Type: float)
 FillValue     : 100000002004087730000.000000 (Type: float)

=== Attributes ===
missing_value       : 1.0E20
cell_measures       : area: areacella
cell_methods        : area: mean time: maximum (interval: 5 minutes)
original_name       : TREFHTMX
comment             : near-surface (usually, 2 meter) air temperature; derived from downscaled tasmax & tasmin
units               : K
long_name           : Daily Near-Surface Air Temperature
standard_name       : air_temperature
_FillValue          : 1.0E20
_ChunkSizes         : 1

=== Metadata ===
Units          : K (original: K)

Shape          : [365, 600, 1440]
Data Type      : float

. 
. ///time variable
> local url = "https://nex-gddp-cmip6.s3-us-west-2.amazonaws.com/" + ///
> "NEX-GDDP-CMIP6/BCC-CSM2-MR/ssp245/r1i1p1f1/tas/" + ///
> "tas_day_BCC-CSM2-MR_ssp245_r1i1p1f1_gn_2050.nc"

. ncdisp time using `"`url'"'

=== Variable Structure ===
Name: time                      Type: double         

=== Dimensions ===
Dimension       Length   Coordinate     
time            365      [Yes]          

=== Scale/Offset Parameters ===

=== Attributes ===
units               : days since 2040-01-01
standard_name       : time
long_name           : time
calendar            : 365_day
axis                : T
_ChunkSizes         : 365
_CoordinateAxisType : Time

=== Metadata ===
Units          : days since 2040-01-01 (original: days since 2040-01-01)

Shape          : [365]
Data Type      : double

. 
. 
. *7.3 Import Raster Data into Stata
. //Read the GeoTIFF file for a specific region
. shp2dta using "hunan.shp", database(hunan_db) coordinates(hunan_coord) genid(id)
type: 5

. use "hunan_coord.dta",clear

. drop if missing(_X, _Y)
(14 observations deleted)

. crsconvert _X _Y, gen(alber_) from(hunan.shp) to(DMSP-like2020.tif)
Converting coordinates from CRS:
Source CRS: GEOGCS["GCS_WGS_1984", 
  DATUM["D_WGS_1984", 
    SPHEROID["WGS_1984", 6378137.0, 298.257223563]], 
  PRIMEM["Greenwich", 0.0], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Longitude", EAST], 
  AXIS["Latitude", NORTH]]
Target CRS: PROJCS["PCS Name = WGS_1984_Albers", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Albers_Conic_Equal_Area"], 
  PARAMETER["central_meridian", 105.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["standard_parallel_1", 25.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  PARAMETER["standard_parallel_2", 47.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH]]

. 
. qui sum alber__X

. local maxX = r(max)+2000

. local minX = r(min)-2000

. 
. qui sum alber__Y

. local maxY = r(max)+2000

. local minY = r(min)-2000

. 
. gtiffread DMSP-like2020.tif, origin(1 1) size(-1 1) clear 

. gen n=_n

. sum n if y>`minY' & y<`maxY'

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
           n |        611        3028    176.5248       2723       3333

. local start_row = r(min)

. local n_rows = r(N)

. 
. gtiffread DMSP-like2020.tif, origin(1 1) size(1 -1) clear 

. gen n=_n

. sum n if x>`minX' & x<`maxX'

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
           n |        550      3290.5    158.9156       3016       3565

. local start_col = r(min)

. local n_cols = r(N)

. 
. gtiffread DMSP-like2020.tif, origin(`start_row' `start_col') size(`n_rows' `n_cols') clear

. 
. save DMSP-like2020.dta,replace
file DMSP-like2020.dta saved

. 
. //heatplot
. ssc install heatplot, replace
checking heatplot consistency and verifying not already installed...
all files already exist and are up to date.

. ssc install palettes, replace
checking palettes consistency and verifying not already installed...
all files already exist and are up to date.

. ssc install colrspace, replace
checking colrspace consistency and verifying not already installed...
all files already exist and are up to date.

. 
. use DMSP-like2020.dta, clear

. 
. heatplot value y x, color(plasma) ///
>     keylabels(, format(%4.2f))

.         
. graph save gragh1, replace
(file gragh1.gph not found)
file gragh1.gph saved

. 
. //Read the NetCDF file
. local url = "https://nex-gddp-cmip6.s3-us-west-2.amazonaws.com/" + ///
> "NEX-GDDP-CMIP6/BCC-CSM2-MR/ssp245/r1i1p1f1/tas/" + ///
> "tas_day_BCC-CSM2-MR_ssp245_r1i1p1f1_gn_2050.nc"

. 
. ncread lon using `"`url'"', clear 


Sucessfully import 1440 Obs into Stata.

. gen n=_n 

. qui sum n if lon>=108 & lon<=115

. local lon_start = r(min)

. local lon_count = r(N)

. 
. ncread lat using `"`url'"', clear 


Sucessfully import 600 Obs into Stata.

. gen n=_n 

. qui sum n if lat>=24 & lat<=31

. local lat_start = r(min)

. local lat_count = r(N)

. 
. ncread tas using `"`url'"', clear origin(1 `lat_start' `lon_start') ///
>  size(-1 `lat_count' `lon_count')


Sucessfully import 286160 Obs into Stata.

.  
. gen date = time - 3650.5  + date("2050-01-01", "YMD")

. format date %td

. 
. list in 1/10

     +---------------------------------------------------+
     |   time      lat       lon         tas        date |
     |---------------------------------------------------|
  1. | 3650.5   24.125   108.125   288.02673   01jan2050 |
  2. | 3650.5   24.125   108.375   289.05478   01jan2050 |
  3. | 3650.5   24.125   108.625   288.97476   01jan2050 |
  4. | 3650.5   24.125   108.875   288.53751   01jan2050 |
  5. | 3650.5   24.125   109.125   289.27686   01jan2050 |
     |---------------------------------------------------|
  6. | 3650.5   24.125   109.375   290.04214   01jan2050 |
  7. | 3650.5   24.125   109.625   289.90146   01jan2050 |
  8. | 3650.5   24.125   109.875   290.08304   01jan2050 |
  9. | 3650.5   24.125   110.125   286.86743   01jan2050 |
 10. | 3650.5   24.125   110.375   287.87402   01jan2050 |
     +---------------------------------------------------+

. 
. save "grid_all.dta", replace
file grid_all.dta saved

. 
. 
. *7.4 Calculating Average and Total Nighttime Light Intensity for Hunan
. gzonalstats DMSP-like2020.tif using hunan.shp, stats("sum avg") clear
Raster CRS: PCS Name = WGS_1984_Albers
Raster CRS WKT: PROJCS["PCS Name = WGS_1984_Albers", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Albers_Conic_Equal_Area"], 
  PARAMETER["central_meridian", 105.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["standard_parallel_1", 25.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  PARAMETER["standard_parallel_2", 47.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH]]
Shapefile CRS: GCS_WGS_1984
Vector CRS WKT: GEOGCS["GCS_WGS_1984", 
  DATUM["D_WGS_1984", 
    SPHEROID["WGS_1984", 6378137.0, 298.257223563]], 
  PRIMEM["Greenwich", 0.0], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Longitude", EAST], 
  AXIS["Latitude", NORTH]]
Reprojecting shapefile from GCS_WGS_1984 to PCS Name = WGS_1984_Albers
Shapefile bounds for raster reading: ReferencedEnvelope[373271.4002242747 : 918728.259838356, 2596264.786161866 : 3202467.2929103803] DefaultProjectedCRS[PCS Name = WGS_1984_Albers] AXIS["Easting
> ", EAST] AXIS["Northing", NORTH]
Optimizing raster read to only cover shapefile extent
Raster envelope: ReferencedEnvelope[-2643772.8565207715 : 2212227.1434792285, 1871896.5262559392 : 5926896.526255939] DefaultProjectedCRS[PCS Name = WGS_1984_Albers] AXIS["Easting", EAST] AXIS["N
> orthing", NORTH]
Using intersection bounds: ReferencedEnvelope[373271.4002242747 : 918728.259838356, 2596264.786161866 : 3202467.2929103803] DefaultProjectedCRS[PCS Name = WGS_1984_Albers] AXIS["Easting", EAST] A
> XIS["Northing", NORTH]
Successfully created optimized read parameters
Successfully read raster data with optimization
Total features: 14
Created string variable: z_ShiName (length 16)
Created numeric variable: z_Shape_Leng
Created numeric variable: z_Shape_Area
Created string variable: z_Name (length 16)
Created numeric variable: z_lon
Created numeric variable: z_lat
Created numeric variable: avg
Created numeric variable: sum
Data successfully exported to Stata dataset.

. list z_Name avg sum

     +----------------------------------+
     |      z_Name         avg      sum |
     |----------------------------------|
  1. |     Changde   3.2560185    59240 |
  2. |    Chenzhou   2.0607766    39909 |
  3. |    Hengyang   3.2285136    49435 |
  4. |     Huaihua   1.2616182    34803 |
  5. |       Loudi   3.7707743    30630 |
     |----------------------------------|
  6. |    Shaoyang   1.7991827    37423 |
  7. |    Xiangtan   7.2288051    36238 |
  8. |     Xiangxi    1.458301    22557 |
  9. |      Yiyang   2.4555944    30221 |
 10. |    Yongzhou   2.0996052    46796 |
     |----------------------------------|
 11. |     Yueyang   3.8674934    57382 |
 12. | Zhangjiajie   1.7823899    17004 |
 13. |    Changsha   11.616603   137134 |
 14. |     Zhuzhou   3.8699787    43545 |
     +----------------------------------+

. save "hunan_light.dta", replace
file hunan_light.dta saved

. 
. //presents TNLI and ANLI in Hunan
. 
. // The hunan.shp has been converted to a dta in example 7.3.
. //shp2dta using "hunan.shp", database(hunan_db) coordinates(hunan_coord) genid(id)
. 
. use "hunan_light.dta" ,clear

. rename z_Name Name

. merge 1:1 Name using hunan_db.dta,nogen

    Result                      Number of obs
    -----------------------------------------
    Not matched                             0
    Matched                                14  
    -----------------------------------------

. 
. spmap sum using "hunan_coord.dta", id(id) clmethod(q) cln(6) fcolor(Heat) title("Total Night Light Index")

. graph save graph1, replace
(file graph1.gph not found)
file graph1.gph saved

. 
. spmap avg using "hunan_coord.dta", id(id) clmethod(q) cln(6) fcolor(Heat) title("Average Night Light Index")  

. graph save graph2, replace
(file graph2.gph not found)
file graph2.gph saved

. 
. graph combine graph1.gph graph2.gph

. 
. graph save gragh2, replace
(file gragh2.gph not found)
file gragh2.gph saved

. 
. 
. *7.5 Match cities to nearest four grid cells using matchgeop
. use "grid_all.dta", clear

. 
. rename lon ulon

. rename lat ulat

. save "grid_all_1.dta", replace
file grid_all_1.dta saved

. 
. keep if time==3650.5
(285,376 observations deleted)

. gen n=_n 

. save "hunan_grid.dta", replace
file hunan_grid.dta saved

. 
. use "hunan_city.dta", clear

. matchgeop ORIG_FID lat lon using hunan_grid.dta, neighbors(n ulat ulon) nearcount(4) gen(distance) bearing(angle)

. 
. merge m:1 n using hunan_grid.dta, keep(3)

    Result                      Number of obs
    -----------------------------------------
    Not matched                             0
    Matched                                56  (_merge==3)
    -----------------------------------------

. drop _merge

. save "hunan_origin.dta", replace
(file hunan_origin.dta not found)
file hunan_origin.dta saved

. 
. drop time date

. joinby ulat ulon using grid_all_1.dta

. 
. sort ORIG_FID date 

. list city distance angle date tas in 1/10

     +---------------------------------------------------------+
     |    city    distance       angle        date         tas |
     |---------------------------------------------------------|
  1. | Changde   23.998957   215.80666   01jan2050   281.43893 |
  2. | Changde   13.184405   50.807281   01jan2050    280.9436 |
  3. | Changde   21.997551   152.24742   01jan2050   281.17828 |
  4. | Changde   16.299124   300.75839   01jan2050   280.97092 |
  5. | Changde   16.299124   300.75839   02jan2050   280.97092 |
     |---------------------------------------------------------|
  6. | Changde   21.997551   152.24742   02jan2050   281.17828 |
  7. | Changde   13.184405   50.807281   02jan2050    280.9436 |
  8. | Changde   23.998957   215.80666   02jan2050   281.43893 |
  9. | Changde   16.299124   300.75839   03jan2050   280.97092 |
 10. | Changde   21.997551   152.24742   03jan2050   281.17828 |
     +---------------------------------------------------------+

. 
. ///Diagram of azimuthal angle
> use "hunan_origin.dta", clear

. keep if city == "Changsha"
(52 observations deleted)

. 
. sort angle

. gen id=_n

. 
. local R = 6371 

. gen lat_rad = lat * (_pi/180)  

. 
. gen delta_lat = (distance / `R') * (180/_pi)  

. gen delta_lon = (distance / (`R' * cos(lat_rad))) * (180/_pi)  

. 
. expand 90
(356 observations created)

. bysort n: gen t = _n - 1

. gen theta = (angle * t/89) * (_pi/180)  

. 
. gen arc_lat = lat + delta_lat * cos(theta)

. gen arc_lon = lon + delta_lon * sin(theta)

. 
. bysort n: gen label_theta = (angle/2) * (_pi/180)

. gen label_lat = lat + delta_lat * cos(label_theta)

. gen label_lon = lon + delta_lon * sin(label_theta)

. replace label_lat = lat + delta_lat * 0.7 * cos(label_theta) if id == 3
(90 real changes made)

. replace label_lon = lon + delta_lon * 0.7 * sin(label_theta) if id == 3
(90 real changes made)

. 
. gen latlon_label = "(" + string(lat, "%8.2f") + "°N, " + string(lon, "%8.2f") + "°E)"

. gen ulatlon_label = "(" + string(ulat, "%8.2f") + "°N, " + string(ulon, "%8.2f") + "°E)"

. gen angle_label = string(angle, "%8.2f") + "{&degree}"

. 
. twoway pcarrowi 28.15 113.15307 28.52 113.15307, color(black) ///
>     || pcarrow lat lon ulat ulon, color(blue) ///
>     || scatter lat lon if t == 1, mcolor(red) mlabel(latlon_label) mlabcolor(black) mlabpos(9) mlabgap(0.8) mlabsize(medium) ///
>     || scatter ulat ulon if t == 1 & (ulon == 113.125), mcolor(red) mlabel(ulatlon_label) mlabcolor(black) mlabpos(9) mlabgap(0.8) mlabsize(medium) ///
>     || scatter ulat ulon if t == 1 & (ulon == 113.375), mcolor(red) mlabel(ulatlon_label) mlabcolor(black) mlabpos(3) mlabgap(0.8) mlabsize(medium) ///
>     || line arc_lat arc_lon if id == 1 , lcolor(green) ///
>     || line arc_lat arc_lon if id == 2, lcolor(green) ///
>     || line arc_lat arc_lon if id == 3, lcolor(green) ///
>     || line arc_lat arc_lon if id == 4, lcolor(green) ///
>     || scatter label_lat label_lon, mlabel(angle_label) msymbol(i) mlabcolor(black) mlabsize(medium) ///
>     xscale(off noline) yscale(off noline) xlabel(, nogrid noticks) ylabel(, nogrid noticks) ///
>     aspect(1) legend(off)

. 
. graph save gragh3, replace
(file gragh3.gph not found)
file gragh3.gph saved

.         
. * 7.6 Calculate 80km-radius IDW temperatures for cities
. use "grid_all.dta", clear

. rename lon ulon

. rename lat ulat

. gen n=_n

. save "grid_all_2.dta", replace
(file grid_all_2.dta not found)
file grid_all_2.dta saved

. 
. use "hunan_city.dta", clear

. matchgeop ORIG_FID lat lon using grid_all_2.dta, neighbors(n ulat ulon) within(80) gen(distance)

. 
. merge m:1 n using grid_all_2.dta, keep(3)

    Result                      Number of obs
    -----------------------------------------
    Not matched                             0
    Matched                           148,555  (_merge==3)
    -----------------------------------------

. drop _merge

. 
. list city ulat ulon distance date tas in 1/10

     +-----------------------------------------------------------------+
     |     city     ulat      ulon    distance        date         tas |
     |-----------------------------------------------------------------|
  1. | Yongzhou   25.125   111.625   72.995079   01jan2050   287.24945 |
  2. | Yongzhou   25.125   111.875   73.701637   01jan2050    284.2619 |
  3. | Chenzhou   25.125   113.125    76.69973   01jan2050   285.54437 |
  4. | Yongzhou   25.375   111.125   75.168007   01jan2050   285.06604 |
  5. | Yongzhou   25.375   111.375    56.90913   01jan2050   286.44476 |
     |-----------------------------------------------------------------|
  6. | Yongzhou   25.375   111.625   45.657139   01jan2050   287.84082 |
  7. | Yongzhou   25.375   111.875   46.776157   01jan2050   286.04608 |
  8. | Yongzhou   25.375   112.125   59.573086   01jan2050   285.83316 |
  9. | Yongzhou   25.375   112.375   78.532799   01jan2050   286.43384 |
 10. | Chenzhou   25.375   112.625   70.880791   01jan2050    285.7345 |
     +-----------------------------------------------------------------+

. 
. save "hunan_80km.dta", replace
(file hunan_80km.dta not found)
file hunan_80km.dta saved

. 
. drop if tas==.
(0 observations deleted)

. gen weight  = 1/distance

. gen weighted_tas = tas * weight

. bysort city date : egen sum_weighted_tas = total(weighted_tas)

. bysort city date : egen total_weight = total(weight)

. gen idw_tas = sum_weighted_tas / total_weight

. gen temp_c = idw_tas - 273.15

. 
. duplicates drop city date , force

Duplicates in terms of city date

(143,445 observations deleted)

. 
. list city  distance date  temp_c in 1/10

     +--------------------------------------------+
     |    city    distance        date     temp_c |
     |--------------------------------------------|
  1. | Changde   76.374969   01jan2050    7.65365 |
  2. | Changde   49.893177   02jan2050   7.220788 |
  3. | Changde   39.613548   03jan2050    8.44021 |
  4. | Changde   75.469879   04jan2050   6.136468 |
  5. | Changde    72.10421   05jan2050   7.520319 |
     |--------------------------------------------|
  6. | Changde   60.863079   06jan2050   7.391534 |
  7. | Changde   65.515297   07jan2050   6.704889 |
  8. | Changde   13.184405   08jan2050   3.407739 |
  9. | Changde   16.299124   09jan2050   2.457117 |
 10. | Changde   72.578667   10jan2050   2.555414 |
     +--------------------------------------------+

. 
. save "hunan_IDW.dta", replace
(file hunan_IDW.dta not found)
file hunan_IDW.dta saved

. 
. ///Distribution of raster points within 80 kilometers of Changsha City
> use "hunan_80km.dta" ,clear

. keep if time == 3650.5
(148,148 observations deleted)

. keep if city == "Changsha"
(377 observations deleted)

. 
. summarize lon 

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         lon |         30    113.1531           0   113.1531   113.1531

. local clon = r(mean)

. summarize lat 

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         lat |         30    28.22691           0   28.22691   28.22691

. local clat = r(mean)

. 
. preserve

. clear

. set obs 720
Number of observations (_N) was 0, now 720.

. gen theta = (_n-1) * 2 * _pi/720 

. 
. local R = 6371  

. local d = 80    

. local delta = `d'/`R'  

. 
. gen lat_c = asin(sin(`clat'*_pi/180)*cos(`delta') + ///
>              cos(`clat'*_pi/180)*sin(`delta')*cos(theta)) * (180/_pi)

.              
. gen lon_c = `clon' + ///
>             atan2(sin(theta)*sin(`delta')*cos(`clat'*_pi/180), ///
>                   cos(`delta') - sin(`clat'*_pi/180)*sin(lat_c*_pi/180)) * (180/_pi)

.                                   
. expand 2 if _n == _N
(1 observation created)

. replace theta = 0 if _n == _N
(1 real change made)

. 
. save circle.dta ,replace
file circle.dta saved

. restore

. 
. merge 1:1 _n using circle.dta, nogen

    Result                      Number of obs
    -----------------------------------------
    Not matched                           691
        from master                         0  
        from using                        691  

    Matched                                30  
    -----------------------------------------

. 
. twoway (line lat_c lon_c, sort lcolor(dimgray) lwidth(0.6) lpattern(solid)) ///
>     (pcarrowi  28.22691 113.1531 28.22691 113.9696, color(black)) ///
>         (scatter lat lon, mcolor(red) msymbol(D) msize(small)) ///
>     (scatter ulat ulon, mcolor(blue) msymbol(O) msize(small)), ///
>     xlabel(minmax) ylabel(minmax) ///
>         aspect(1)  legend(off) ///
>     xscale(off noline) yscale(off noline) xlabel(, nogrid noticks) ylabel(, nogrid noticks) ///
>         text(28.26 113.71 "80km", size(medsmall) justification(center))

. 
. graph save gragh4, replace
(file gragh4.gph not found)
file gragh4.gph saved

. 
. ///IDW interpolated temperature distributions in Hunan
> // The hunan.shp has been converted to a dta in example 7.3.
. // shp2dta using "hunan.shp", database(hunan_db) coordinates(hunan_coord) genid(id)
. //January 1
. 
. use "hunan_IDW.dta" ,clear

. keep if date == date("01jan2050", "DMY")
(5,096 observations deleted)

. 
. spmap temp_c using "hunan_coord.dta", id(OBJECTID) clmethod(q) cln(6) fcolor(Heat) legtitle("Temperature (°C)") title("Temperature(20500101)") subtitle("Within 80km Radius")  

. graph save graph1, replace
file graph1.gph saved

. 
. //July 1
. use "hunan_IDW.dta" ,clear

. keep if date == date("01jul2050", "DMY")
(5,096 observations deleted)

. 
. spmap temp_c using "hunan_coord.dta", id(OBJECTID) clmethod(q) cln(6) fcolor(Heat) legtitle("Temperature (°C)") title("Temperature(20500701)") subtitle("Within 80km Radius")  

. graph save graph2, replace
file graph2.gph saved

. 
. graph combine graph1.gph graph2.gph

. 
. graph save gragh5, replace
(file gragh5.gph not found)
file gragh5.gph saved

. 
. log close
      name:  <unnamed>
       log:  C:\Users\17286\Documents\example.log
  log type:  text
 closed on:  21 May 2025, 17:19:04
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
